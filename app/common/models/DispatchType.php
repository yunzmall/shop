<?php
/**
 * Created by PhpStorm.
 * Author: 芸众商城 www.yunzshop.com
 * Date: 2017/2/28
 * Time: 上午11:32
 */

namespace app\common\models;


/**
 * Class DispatchType
 * @package app\common\models
 * @property int id
 * @property int need_send
 * @property int code
 * @property int name
 * @property int sort
 * @property int disable
 */
class DispatchType extends BaseModel
{
    public $table = 'yz_dispatch_type';
    protected $guarded = ['id'];

    const EXPRESS = 1; // 快递
    const SELF_DELIVERY = 2; // 自提
    const STORE_DELIVERY = 3; // 门店配送
    const HOTEL_CHECK_IN = 4; // 酒店入住
    const DELIVERY_STATION_SELF = 5; // 配送站自提

    const DELIVERY_STATION_SEND = 6; // 配送站送货

    const DRIVER_DELIVERY = 7; //司机配送

    const PACKAGE_DELIVER = 8; //自提点

    const CLOUD_WAREHOUSE = 9; //云仓

    public function needSend()
    {
        return $this->need_send;
    }

    /**
     * 订单支付就直接完成的配送方式
     * @return array
     */
    public function paidCompleted()
    {
        return [self::CLOUD_WAREHOUSE];
    }


    public static function goodsEnableDispatchTypeIds(array $ids)
    {
        if (empty($ids)) {return [];}

        $dispatchTypes = self::whereIn('id', $ids)->with(['hasOneSet'])->get();

        $dispatchTypes  = $dispatchTypes->map(function ($item) {
            if (!is_null($item->hasOneSet)) {
                $item->enable = $item->hasOneSet->enable;
                $item->sort = $item->hasOneSet->sort;
            }
            return $item;
        })->filter(function ($dispatchType) {
            return $dispatchType->enable;
        })->values();

        return $dispatchTypes->pluck('id')->toArray();
    }

    public static function dispatchTypesSetting($dispatchTypes = null)

    {
        $dispatchTypes = $dispatchTypes ?: DispatchType::getCurrentUniacidSet()->toArray();
        $dispatchTypes = array_combine(array_column($dispatchTypes, 'code'), $dispatchTypes);


        $dispatchTypes = array_filter($dispatchTypes, function ($dispatchTypes) {
            return $dispatchTypes['enable'];
        });

        $dispatchTypesSetting = array_sort($dispatchTypes, function ($dispatchType) {
            return $dispatchType['sort'] + $dispatchType['id'] / 100;
        });

        return $dispatchTypesSetting;
    }

    public static function getCurrentUniacidSet($plugin = 0)
    {
        $dispatchTypes = self::where('plugin', $plugin)->with(['hasOneSet'])->get();

        $dispatchTypes = $dispatchTypes->map(function ($item) {
            if (!is_null($item->hasOneSet)) {
                $item->enable = $item->hasOneSet->enable;
                $item->sort = $item->hasOneSet->sort;
            }
            return $item;
        })->sortByDesc('sort')->values();

        return $dispatchTypes;
    }

    public static function getAllEnableDispatchType()
    {
        $dispatchTypes = self::where('enable', 1)->with(['hasOneSet'])->get();

        $dispatchTypes =  $dispatchTypes->map(function ($item) {
            if (!is_null($item->hasOneSet)) {
                $item->enable = $item->hasOneSet->enable;
                $item->sort = $item->hasOneSet->sort;
            }
            return $item;
        })->filter(function ($dispatchType) {
            return $dispatchType->enable;
        })->values();

        return $dispatchTypes;
    }
    

    public function hasOneSet()
    {
        return $this->hasOne(DispatchTypeSet::class, 'dispatch_type_id', 'id'); // TODO: Change the autogenerated stub
    }

}